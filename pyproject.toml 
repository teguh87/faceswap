[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "faceswap"
version = "1.2.0"
authors = [
    {name = "Face Swap Developer", email = "developer@example.com"},
]
description = "Advanced face swapping tool with anomaly detection and similarity filtering"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Multimedia :: Video",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
]
keywords = [
    "face-swap",
    "deepfake", 
    "computer-vision",
    "image-processing",
    "video-processing",
    "ai",
    "machine-learning",
    "onnx",
    "insightface"
]
dependencies = [
    "opencv-python>=4.7.0",
    "numpy>=1.21.0", 
    "tqdm>=4.64.0",
    "onnxruntime>=1.15.0",
    "insightface>=0.7.3",
    "pathlib2>=2.3.7; python_version<'3.4'",
]

[project.optional-dependencies]
gpu = [
    "onnxruntime-gpu>=1.15.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
all = [
    "onnxruntime-gpu>=1.15.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0", 
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/teguh87/faceswap"
Documentation = "https://faceswap.readthedocs.io/"
Repository = "https://github.com/teguh87/faceswap"
"Bug Tracker" = "https://github.com/teguh87/faceswap/issues"

[project.scripts]
face-swap = "face_swap_advanced.cli:main"
faceswap = "face_swap_advanced.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
face_swap_advanced = ["models/*.onnx", "config/*.json", "*.md"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=face_swap_advanced",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]